<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.east.logistics.dao.CustomerMapper">
    <resultMap id="BaseResultMap" type="com.east.logistics.entity.Customer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="c_id" jdbcType="INTEGER" property="cId" />
        <result column="c_name" jdbcType="VARCHAR" property="cName" />
        <result column="c_job" jdbcType="VARCHAR" property="cJob" />
        <result column="c_address" jdbcType="VARCHAR" property="cAddress" />
        <result column="c_phone" jdbcType="CHAR" property="cPhone" />
        <result column="s_id" jdbcType="INTEGER" property="sId" />
        <result column="c_billnums" jdbcType="INTEGER" property="cBillnums" />
        <result column="t_id" jdbcType="INTEGER" property="tId" />
        <result column="c_send" jdbcType="INTEGER" property="cSend" />
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from customer
        where c_id = #{cId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.east.logistics.entity.Customer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into customer (c_id, c_name, c_job,
        c_address, c_phone, s_id,
        c_billnums, t_id, c_send
        )
        values (#{cId,jdbcType=INTEGER}, #{cName,jdbcType=VARCHAR}, #{cJob,jdbcType=VARCHAR},
        #{cAddress,jdbcType=VARCHAR}, #{cPhone,jdbcType=CHAR}, #{sId,jdbcType=INTEGER},
        #{cBillnums,jdbcType=INTEGER}, #{tId,jdbcType=INTEGER}, #{cSend,jdbcType=INTEGER}
        )
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.east.logistics.entity.Customer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update customer
        set c_name = #{cName,jdbcType=VARCHAR},
        c_job = #{cJob,jdbcType=VARCHAR},
        c_address = #{cAddress,jdbcType=VARCHAR},
        c_phone = #{cPhone,jdbcType=CHAR},
        s_id = #{sId,jdbcType=INTEGER},
        c_billnums = #{cBillnums,jdbcType=INTEGER},
        t_id = #{tId,jdbcType=INTEGER},
        c_send = #{cSend,jdbcType=INTEGER}
        where c_id = #{cId,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select c_id, c_name, c_job, c_address, c_phone, s_id, c_billnums, t_id, c_send
        from customer
        where c_id = #{cId,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select c_id, c_name, c_job, c_address, c_phone, s_id, c_billnums, t_id, c_send
        from customer
    </select>

    <select id="count" resultType="java.lang.Integer">
      select count (*) from customer
    </select>
    <select id="countVague" resultType="java.lang.Integer">
        select count (*) from customer
        <where>
            <if test="cName != null">
                and c_name like concat('%',#{cName},'%')
            </if>
            <if test="tId != null ">
                and t_id like concat('%',#{tId},'%')
            </if>
            <if test="cPhone != null ">
                and c_phone like concat('%',#{cPhone},'%')
            </if>
        </where>
    </select>
    <select id="selectVague" resultType="com.east.logistics.entity.Customer">
        select * from customer
        <where>
            <if test="cName != null">
                and c_name like concat('%',#{cName},'%')
            </if>
            <if test="tId != null ">
                and t_id like concat('%',#{tId},'%')
            </if>
            <if test="cPhone != null ">
                and c_phone like concat('%',#{cPhone},'%')
            </if>
        </where>
    </select>


</mapper>